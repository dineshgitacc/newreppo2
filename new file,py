import streamlit as st
import streamlit.components.v1 as components

# Example video file
video_url = "https://www.w3schools.com/html/mov_bbb.mp4"  # Replace with your actual video URL

# Example timestamps in seconds where the markers will appear
timestamps = [5, 10, 20]  # Replace with your own timestamp values

# HTML, CSS, and JavaScript to display video with custom markers on the timeline
video_html = f"""
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video with Markings</title>
  <style>
    .video-container {{
      position: relative;
      width: 600px;
    }}

    .custom-timeline {{
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 5px;
      background-color: #ccc;
      cursor: pointer;
    }}

    .marker {{
      position: absolute;
      width: 2px;
      height: 100%;
      background-color: red;
    }}
  </style>
</head>
<body>
  <div class="video-container">
    <video id="video" width="600" controls>
      <source src="{video_url}" type="video/mp4">
      Your browser does not support the video tag.
    </video>
    <div id="custom-timeline" class="custom-timeline">
      <!-- Markers for timestamps -->
      {"".join([f'<div class="marker" data-time="{ts}" style="left: {(ts/60) * 100}%"></div>' for ts in timestamps])}
    </div>
  </div>

  <script>
    const video = document.getElementById('video');
    const markers = document.querySelectorAll('.marker');

    // Function to update marker positions based on video duration
    video.addEventListener('loadedmetadata', function() {{
      const duration = video.duration;
      markers.forEach(marker => {{
        const time = marker.getAttribute('data-time');
        const percentage = (time / duration) * 100;
        marker.style.left = percentage + '%';
      }});
    }});
  </script>
</body>
</html>
"""

# Embed the custom HTML in Streamlit
components.html(video_html, height=400)
